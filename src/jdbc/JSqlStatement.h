/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class JSqlStatement */

#ifndef _Included_csql_jdbc_JSqlStatement
#define _Included_csql_jdbc_JSqlStatement
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     JSqlStatement
 * Method:    alloc
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_alloc
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    free
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_free
  (JNIEnv *, jobject);

/*
 * Class:     JSqlStatement
 * Method:    setConnectionPtr
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setConnectionPtr
  (JNIEnv *, jobject, jlong);

/*
 * Class:     JSqlStatement
 * Method:    prepare
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_csql_jdbc_JSqlStatement_prepare
  (JNIEnv *, jobject, jstring);

/*
 * Class:     JSqlStatement
 * Method:    isSelect
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_csql_jdbc_JSqlStatement_isSelect
  (JNIEnv *, jobject);

/*
 * Class:     JSqlStatement
 * Method:    execute
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_csql_jdbc_JSqlStatement_execute
  (JNIEnv *, jobject);

/*
 * Class:     JSqlStatement
 * Method:    next
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_csql_jdbc_JSqlStatement_next
  (JNIEnv *, jobject);

/*
 * Class:     JSqlStatement
 * Method:    close
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_csql_jdbc_JSqlStatement_close
  (JNIEnv *, jobject);

/*
 * Class:     JSqlStatement
 * Method:    setShort
 * Signature: (IS)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setShort
  (JNIEnv *, jobject, jint, jshort);

/*
 * Class:     JSqlStatement
 * Method:    setInt
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setInt
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     JSqlStatement
 * Method:    setLong
 * Signature: (IJ)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setLong
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     JSqlStatement
 * Method:    setByte
 * Signature: (IB)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setByte
  (JNIEnv *, jobject, jint, jbyte);

/*
 * Class:     JSqlStatement
 * Method:    setFloat
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setFloat
  (JNIEnv *, jobject, jint, jfloat);

/*
 * Class:     JSqlStatement
 * Method:    setDouble
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setDouble
  (JNIEnv *, jobject, jint, jdouble);

/*
 * Class:     JSqlStatement
 * Method:    setString
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setString
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     JSqlStatement
 * Method:    setDate
 * Signature: (ILjava/sql/Date;)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setDate
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     JSqlStatement
 * Method:    setTime
 * Signature: (ILjava/sql/Time;)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setTime
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     JSqlStatement
 * Method:    setTimestamp
 * Signature: (ILjava/sql/Timestamp;)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setTimestamp
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     JSqlStatement
 * Method:    setNull
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_setNull
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getShort
 * Signature: (I)S
 */
JNIEXPORT jshort JNICALL Java_csql_jdbc_JSqlStatement_getShort
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getInt
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_csql_jdbc_JSqlStatement_getInt
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getLong
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_csql_jdbc_JSqlStatement_getLong
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getByte
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_csql_jdbc_JSqlStatement_getByte
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getFloat
 * Signature: (I)F
 */
JNIEXPORT jfloat JNICALL Java_csql_jdbc_JSqlStatement_getFloat
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getDouble
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_csql_jdbc_JSqlStatement_getDouble
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_csql_jdbc_JSqlStatement_getString
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getDate
 * Signature: (I)Ljava/sql/Date;
 */
JNIEXPORT jobject JNICALL Java_csql_jdbc_JSqlStatement_getDate
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getTime
 * Signature: (I)Ljava/sql/Time;
 */
JNIEXPORT jobject JNICALL Java_csql_jdbc_JSqlStatement_getTime
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    getTimestamp
 * Signature: (I)Ljava/sql/Timestamp;
 */
JNIEXPORT jobject JNICALL Java_csql_jdbc_JSqlStatement_getTimestamp
  (JNIEnv *, jobject, jint);

/*
 * Class:     JSqlStatement
 * Method:    freeStmt
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_csql_jdbc_JSqlStatement_freeStmt
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
